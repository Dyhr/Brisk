#if UNITY_EDITOR
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text;
using Brisk.Entities;
using UnityEditor;
using UnityEngine;

namespace Brisk.Actions
{
    public static class ActionGenerator
    {
        [MenuItem("Brisk/Generate Actions", false, 4)]
        public static void GenerateClasses()
        {
            var types = AppDomain.CurrentDomain.GetAssemblies()
                .SelectMany(a => a.GetTypes())
                .Where(t => t.IsClass && t.IsSubclassOf(typeof(NetBehaviour)));


            var actions = new Dictionary<Type, List<MethodInfo>>();
            var actionList = new List<string>();
            foreach (var type in types)
            {
                foreach (var method in type.GetMethods())
                {
                    if (Attribute.GetCustomAttribute(method, typeof(Action)) == null) continue;
                    if (!actions.ContainsKey(type)) actions.Add(type, new List<MethodInfo>());
                    actions[type].Add(method);

                    actionList.Add($"{type.FullName}.{method.Name}");
                    Debug.Log($"{type} {method}");
                }
            }
            
            
            var result = new StringBuilder();
            result.AppendLine("// #### AUTO-GENERATED CODE ####");
            result.AppendLine("// Please avoid editing");
            result.AppendLine("// Copyright Â© Brisk Technologies");
            result.AppendLine("");
            result.AppendLine("namespace Brisk.Actions {");
            result.AppendLine("    public static class AutoGenerated_BriskActions {");

            AddList(result, actionList);
            
            result.AppendLine("    }");
            result.AppendLine("}");
            
            File.WriteAllText("Assets/Resources/AutoGenerated_BriskActions.cs", result.ToString());
            AssetDatabase.Refresh();
        }

        private static void AddList(StringBuilder result, List<string> actions)
        {
            result.AppendLine("        private static string[] serials = new []{");

            foreach (var action in actions)
                result.AppendLine($@"            ""{action}""");

            result.AppendLine("        };");
        }
    }
}
#endif
